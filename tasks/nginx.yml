---
# tasks file for nginx

- import_tasks: common.yml

- import_tasks: ca.yml

- include_tasks: php.yml
  when: "test_case == 'webserver-dynamic'"

- name: install dependencies of Redhat
  yum:
    name=zlib,zlib-devel,openssl,openssl-devel,pcre,pcre-devel
    state=present
  when: ansible_distribution == 'Redhat'

- name: install dependencies of Ubuntu
  apt:
    name=libpcre3,libpcre3-dev,libssl-dev,zlib1g-dev
    state=present
  when: ansible_distribution == 'Ubuntu'

- name: Download nginx
  get_url:
    url={{ nginx_url }}
    dest={{ pkgsdir }}

- name: unarchive nginx
  unarchive:
    src={{ pkgsdir }}/{{ nginx_file }}
    dest={{ builddir }}
    remote_src=yes

- name: build nginx
  shell:
    cd {{ builddir }}/{{ nginx_dir }};
    ./configure --with-http_ssl_module --prefix={{ installdir }};
    make -j{{ ansible_processor_count }};
    make install

- name: Copy nginx service file
  template: src=nginx/nginx.service dest=/lib/systemd/system/nginx.service

- name: Copy nginx index.html
  template: src=nginx/index.html dest={{ installdir }}/html/index.html

- include_tasks: sysconf.yml

- name: Copy nginx index.php
  template: src=nginx/index.php dest={{ installdir }}/html/index.php
  when: "test_case == 'webserver-dynamic'"

- name: Copy nginx configuration for webserver
  template: src=nginx/nginx.conf.{{ test_case }} dest={{ installdir }}/conf/nginx.conf
  notify: restart nginx
  when: "test_case != 'proxy' and test_case != 'https-proxy'"

- name: Copy nginx configuration for webserver
  template: src=nginx/nginx.conf.proxy dest={{ installdir }}/conf/nginx.conf
  notify: restart nginx
  when: "test_case == 'proxy' and build_proxy == true"

- name: Copy nginx configuration for webserver
  template: src=nginx/nginx.conf.https-proxy dest={{ installdir }}/conf/nginx.conf
  notify: restart nginx
  when: "test_case == 'https-proxy' and build_proxy == true"

- name: Copy nginx configuration for webserver
  template: src=nginx/nginx.conf.webserver dest={{ installdir }}/conf/nginx.conf
  notify: restart nginx
  when: "test_case == 'proxy' and build_server == true"

- name: Copy nginx configuration for webserver
  template: src=nginx/nginx.conf.webserver dest={{ installdir }}/conf/nginx.conf
  notify: restart nginx
  when: "test_case == 'https-proxy' and build_server == true"

- name: http service state
  service: name=nginx state=started enabled=yes
